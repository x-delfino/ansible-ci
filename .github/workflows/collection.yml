---
name: Ansible Collection CI

'on':
  workflow_call:
    inputs:
      run_publish:
        type: boolean
        default: false
      run_build:
        type: boolean
        default: false
    secrets:
      ANSIBLE_GALAXY_TOKEN:
        required: false

jobs:
  ci:
    name: Lint, Test, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: repo

      - name: Read namespace and collection name from galaxy.yml
        id: galaxy
        run: |
          ns=$(grep '^namespace:' ./repo/galaxy.yml | awk '{print $2}')
          coll=$(grep '^name:' ./repo/galaxy.yml | awk '{print $2}')
          ver=$(grep '^name:' ./repo/galaxy.yml | awk '{print $2}')
          coll_path="./ansible_collections/$ns/$coll"
          coll_archive="$ns-$coll-$ver.tar.gz"
          echo "COLLECTION_PATH=$coll_path" >> $GITHUB_ENV
          echo "COLLECTION_ARCHIVE=$coll_archive" >> $GITHUB_ENV

      - name: Move to namespaced path
        run: |
          mkdir -p ${{ env.COLLECTION_PATH }}
          mv ./repo ${{ env.COLLECTION_PATH }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: ${{ env.COLLECTION_PATH }}
        run: pip install -r './automation/requirements.txt'

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Run Lint
        working-directory: ${{ env.COLLECTION_PATH }}
        run: task lint

      - name: Run Tests
        working-directory: ${{ env.COLLECTION_PATH }}
        run: task test

      - name: Build Collection
        working-directory: ${{ env.COLLECTION_PATH }}
        if: ${{ inputs.run_build }}
        run: task build:notest

      - uses: actions/upload-artifact@v4
        if: ${{ inputs.run_build }}
        with:
          name: ${{ env.COLLECTION_ARCHIVE }}
          path: ${{ env.COLLECTION_PATH }}/build/${{ env.COLLECTION_ARCHIVE }}

      - name: Publish Collection
        working-directory: ${{ env.COLLECTION_PATH }}
        if: ${{ inputs.run_publish }}
        env:
          ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
        run: task publish:nobuild
